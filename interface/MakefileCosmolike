CC = $(C_COMPILER)
CXX = $(CXX_COMPILER)

# LINK ARMADILLO LIBRARY
ARMA := 1

# LINK GSL LIBRARY
GSL   := 1

# LINK FFTW
FFTW := 1

# LINK FMT
#FMT := 1

# LINK SPDLOG
SPDLOG := 1

# LINK INTEL THREAD BUILDING BLOCKS
#TBB := 1

# LINK NAG LIBRARY
#NAG := 1

# LINK C LOG LIBRARY
CLOG :=1

# LINK PYBIND LIBRARY
PYBIND := 1

# LINK HDF5 LIBRARY
#HDF5 := 1


# DEFINE TEST CODE
TEST := 1

CSOURCES =
OBJECTC =

CPPSOURCES =
OBJECTCPP =

CFLAGS =  -std=c99 -I ${ROOTDIR}/.local/include/ -I ${ROOTDIR}/external_modules/code/
CXXFLAGS = -std=c++17 -I ${ROOTDIR}/.local/include/ -I ${ROOTDIR}/external_modules/code/
LDFLAGS = -L ${ROOTDIR}/.local/lib

ifdef COSMOLIKE_DEBUG_MODE
	COMMON_FLAGS += -O0  -DDEBUG -W -Wall -Wextra -Wcomment -pedantic -g -fmax-errors=1 -Wno-unknown-pragmas
else
	COMMON_FLAGS += -O3 -fmax-errors=1 -ffast-math -fopenmp
endif

ifdef IGNORE_CPP_SPDLOG_INSTALLATION
	COMMON_FLAGS += -I ${GLOBAL_PACKAGES_INCLUDE}
endif

ifdef ARMA
	CXXFLAGS += -DARMA -DARMA_DONT_PRINT_FAST_MATH_WARNING
	LDFLAGS += -llapack -lopenblas -larpack -larmadillo
endif

ifdef GSL
	COMMON_FLAGS += -DHAVE_INLINE -DGSLLIB
	ifdef IGNORE_C_GSL_INSTALLATION
		COMMON_FLAGS += -I ${GLOBAL_PACKAGES_INCLUDE}
		LDFLAGS += -L ${GLOBAL_PACKAGES_LOCATION}/lib
	endif
	LDFLAGS += -lgsl -lgslcblas
endif

ifdef FMT
	LDFLAGS += -lfmt
endif

ifdef FFTW
	ifdef IGNORE_C_FFTW_INSTALLATION
		COMMON_FLAGS += -I ${GLOBAL_PACKAGES_INCLUDE}
		LDFLAGS += -L ${GLOBAL_PACKAGES_LOCATION}/lib
	endif
	LDFLAGS += -lfftw3
endif

ifdef NAG
	COMMON_FLAGS += -I ${NAG_INC} -DNAGLIB
	LDFLAGS += ${NAG_LIB}/libnagc_mkl.so -lpthread
endif

ifdef TBB
	COMMON_FLAGS += -DTBB
	LDFLAGS += -ltbb -ltbbmalloc
endif

ifdef CLOG
	COMMON_FLAGS += -DLOG_USE_COLOR
	CSOURCES += ${ROOTDIR}/external_modules/code/log.c/src/log.c
	OBJECTC += ./log.o
endif

ifdef SPDLOG
	ifndef IGNORE_CPP_SPDLOG_INSTALLATION
		LDFLAGS += ${ROOTDIR}/.local/lib/libspdlog.a
	endif
endif

ifdef TEST
	COMMON_FLAGS += -DTEST
endif

CFLAGS += ${COMMON_FLAGS}
CXXFLAGS += ${COMMON_FLAGS}

ifdef PYBIND
	CXXFLAGS += $(shell python3 -m pybind11 --includes) -DPYBIND11
	LDFLAGS += $(shell python3-config --ldflags)
endif

ifdef HDF5
	CFLAGS += -DHDF5LIB
	LDFLAGS += -lhdf5
endif

LDFLAGS += -lm

all:  shared
shared: cosmolike_roman_real_interface.so

CSOURCES += \
		${ROOTDIR}/external_modules/code/cfftlog/cfftlog.c \
		${ROOTDIR}/external_modules/code/cfftlog/utils_complex.c \
		${ROOTDIR}/external_modules/code/cfftlog/utils.c \
		${ROOTDIR}/external_modules/code/cfastpt/cfastpt.c \
		${ROOTDIR}/external_modules/code/cfastpt/utils_complex_cfastpt.c \
		${ROOTDIR}/external_modules/code/cfastpt/utils_cfastpt.c \
		${ROOTDIR}/external_modules/code/cosmolike/basics.c \
		${ROOTDIR}/external_modules/code/cosmolike/bias.c \
		${ROOTDIR}/external_modules/code/cosmolike/baryons.c \
		${ROOTDIR}/external_modules/code/cosmolike/cosmo3D.c \
		${ROOTDIR}/external_modules/code/cosmolike/cosmo2D.c \
		${ROOTDIR}/external_modules/code/cosmolike/halo.c \
		${ROOTDIR}/external_modules/code/cosmolike/IA.c \
		${ROOTDIR}/external_modules/code/cosmolike/recompute.c \
		${ROOTDIR}/external_modules/code/cosmolike/radial_weights.c \
		${ROOTDIR}/external_modules/code/cosmolike/redshift_spline.c \
		${ROOTDIR}/external_modules/code/cosmolike/structs.c \
		${ROOTDIR}/external_modules/code/cosmolike/pt_cfastpt.c \

OBJECTC += \
		./cfftlog.o \
		./utils_complex.o \
		./utils.o \
		./cfastpt.o \
		./utils_complex_cfastpt.o \
		./utils_cfastpt.o \
		./basics.o \
		./baryons.o \
		./bias.o \
		./cosmo3D.o \
		./cosmo2D.o \
		./halo.o \
		./IA.o \
		./radial_weights.o \
		./recompute.o \
		./redshift_spline.o \
		./structs.o \
		./pt_cfastpt.o

CPPSOURCES += \
		${ROOTDIR}/external_modules/code/cosmolike/generic_interface.cpp \
		${ROOTDIR}/external_modules/code/cosmolike/cosmo2D_wrapper.cpp

OBJECTCPP += \
		./generic_interface.o \
		./cosmo2D_wrapper.o

$(OBJECTC): $(CSOURCES)
	$(CC) $(CFLAGS) -fPIC -c $(CSOURCES)

$(OBJECTCPP): $(CPPSOURCES)
	$(CXX) $(CXXFLAGS) -fPIC -c $(CPPSOURCES)

cosmolike_roman_real_interface.so: $(OBJECTC) $(OBJECTCPP)
	$(CXX) $(CXXFLAGS) -DCOBAYA_SAMPLER -shared -fPIC -o $@ $(OBJECTC) $(OBJECTCPP) interface.cpp $(LDFLAGS)
	@rm *.o

test: $(OBJECTC) $(CSOURCES) $(CPPSOURCES)
	$(CXX) $(CXXFLAGS) -DCOBAYA_SAMPLER -fPIC -o $@ $(OBJECTC) $(CPPSOURCES) $(LDFLAGS)

clean:
	@rm -rf cosmolike_roman_real_interface.so cosmolike_roman_real_interface.so.dSYM  *.o

